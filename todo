zrobić:
    jak działa gra w wersji through_net:
        zrób pokój:
            przekierowanie na strone through_net tam jeśli gracz nie ma id to ustawia się mu id
            jeśli nie ma takiego id w żadnym pokoju ani jako p1 ani jako p2
            sprawdź czy są pokoje oczekujące na przeciwnika:
                jeśli są to:
                    dodaj player_id jako p2 w roomie
                jeśli nie ma:
                    stwórz room i ustaw w nim pid jako p1 a resztę na puste stringi


         na stronie pokoju dodatkowy js który:
            pobiera i zapisuje u siebie player_id z sesji i id pokoju z tym numerem player_id jako p1 albo p2

            potem
            co jakiś czas wysyła do serwera request: czy 2 gracz dołączył ? czyj ruch? kto wygrał?
            jeśli nie wiadomo czyja jest kolej lub nie jest tego usera to:
                nie renderuj Checkers
                a jeśli wiadomo renderuj


            po stronie serwera:
                jeśli jest czas od ostatniego ruchu to sprawdź czy obecny czas jest większy o X
                jeśli tak to ustaw że wygrał ten czyja nie jest kolej

                tak czy tak
                odpowiedz

            jeśli 2 gracz dołączył:
                zrób fetchBoardState

                po stronie serwera fetchBoardState
                 powinien ustawiać w boardzie flagę winner jeśli ktoś wygrał a inaczej
                 powinien ustawiać czas wykonany od ostatniego ruchu

                a jeśli niesie za sobą wiadomość o move to powinien dodatkowo ustawiać że kogo innego kolej





            jeśli ruch przeciwnika to licz czas

            jeśli czas minął a gracz już dołączył to:
                wyślij na serwer że player który wysyła request wygrał



    jak działa serwis:
      gracz dostaje białe pionki (dla uproszczenia)
      wysyła zapytanie mam białe pionki jakie mam ruchy
      dostaje ruchy
      wybiera jeden z nich i wysyła zapytanie do serwera mam białe pionki i chce taki ruch
        serwer wykonuje ruch
        zapisuje nowy stan w sesji
        zapisuje w sesji że ostatnio ruch został wykonany przez białe i jeśli zapytanie z "mam białe pionki" zostanie wysłane ponownie
        to serwer
          obliczy i wykona ruch dla czarnych pionków
          zapisze nowy stan w sesji z informacją że ostatni ruch był czarnych
            jeśli teraz będzie nowe zapytanie o białe pionki to serwer zwróci stan sesji
        jeśli nowe zapytanie nie zostanie wysłane to serwer:
          zwróci stan z sesji






znleźć framework do testowania js
